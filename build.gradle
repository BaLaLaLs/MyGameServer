/*
 * This file was generated by the Gradle 'init' task.
 */
plugins {
    id 'org.springframework.boot' version '2.2.0.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.3.72'
}

repositories {
    mavenCentral()
    mavenLocal()
    maven {
        url = 'http://maven.aliyun.com/nexus/content/groups/public/'
    }

    maven {
        url = 'http://repo.maven.apache.org/maven2'
    }
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter'
    testImplementation('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }
    compile 'io.netty:netty-all:4.1.42.Final'
    compile 'com.google.protobuf:protobuf-java:3.10.0'
    compile 'org.springframework.boot:spring-boot-starter-web:2.1.9.RELEASE'
    compile 'org.postgresql:postgresql:42.2.8'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa:2.1.9.RELEASE'
    testCompile 'org.springframework.boot:spring-boot-starter-test:2.1.9.RELEASE'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
}
ext {
    springVersion = "2.2.0.RELEASE"
}
group = 'cn.balalala'
version = '1.0-SNAPSHOT'
sourceCompatibility = '8'

task protocFile(type:Exec, description: "编译proto文件") {
    workingDir './src/main/resources'
    if (System.properties['os.name'].contains('windows')) {
        commandLine 'cmd', '/c', 'protoc.bat'
    } else {
        commandLine './protoc.sh'
    }
}
compileKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}
compileTestKotlin {
    kotlinOptions {
        jvmTarget = "1.8"
    }
}